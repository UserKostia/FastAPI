# encoding: utf-8
# module black.mode
# from C:\Users\kosta\AppData\Local\Programs\Python\Python311\Lib\site-packages\black\mode.cp311-win_amd64.pyd
# by generator 1.147
# no doc

# imports
from _hashlib import sha256

import enum as __enum


# Variables with simple values

DEFAULT_LINE_LENGTH = 88

_MAX_CACHE_KEY_PART_LENGTH = 32

# functions

def dataclass(cls=None, *, init=True, repr=True, eq=True, order=False, unsafe_hash=False, frozen=False, match_args=True, kw_only=False, slots=False, weakref_slot=False): # reliably restored by inspect
    """
    Add dunder methods based on the fields defined in the class.
    
        Examines PEP 526 __annotations__ to determine fields.
    
        If init is true, an __init__() method is added to the class. If repr
        is true, a __repr__() method is added. If order is true, rich
        comparison dunder methods are added. If unsafe_hash is true, a
        __hash__() method is added. If frozen is true, fields may not be
        assigned to after instance creation. If match_args is true, the
        __match_args__ tuple is added. If kw_only is true, then by default
        all fields are keyword-only. If slots is true, a new class with a
        __slots__ attribute is returned.
    """
    pass

def Dict(*args, **kwargs): # real signature unknown
    """ A generic version of dict. """
    pass

def field(*, default='<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>', default_factory='<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>', init=True, repr=True, hash=None, compare=True, metadata=None, kw_only='<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>'): # reliably restored by inspect
    """
    Return an object to identify dataclass fields.
    
        default is the default value of the field.  default_factory is a
        0-argument function called to initialize a field's value.  If init
        is true, the field will be a parameter to the class's __init__()
        function.  If repr is true, the field will be included in the
        object's repr().  If hash is true, the field will be included in the
        object's hash().  If compare is true, the field will be used in
        comparison functions.  metadata, if specified, must be a mapping
        which is stored but not otherwise examined by dataclass.  If kw_only
        is true, the field will become a keyword-only parameter to
        __init__().
    
        It is an error to specify both default and default_factory.
    """
    pass

def Final(*args, **kwargs): # real signature unknown
    """
    Special typing construct to indicate final names to type checkers.
    
        A final name cannot be re-assigned or overridden in a subclass.
    
        For example::
    
            MAX_SIZE: Final = 9000
            MAX_SIZE += 1  # Error reported by type checker
    
            class Connection:
                TIMEOUT: Final[int] = 10
    
            class FastConnector(Connection):
                TIMEOUT = 1  # Error reported by type checker
    
        There is no runtime checking of these properties.
    """
    pass

def Set(*args, **kwargs): # real signature unknown
    """ A generic version of set. """
    pass

def supports_feature(*args, **kwargs): # real signature unknown
    pass

# classes

class attrgetter(object):
    """
    attrgetter(attr, ...) --> attrgetter object
    
    Return a callable object that fetches the given attribute(s) from its operand.
    After f = attrgetter('name'), the call f(r) returns r.name.
    After g = attrgetter('name', 'date'), the call g(r) returns (r.name, r.date).
    After h = attrgetter('name.first', 'name.last'), the call h(r) returns
    (r.name.first, r.name.last).
    """
    def __call__(self, *args, **kwargs): # real signature unknown
        """ Call self as a function. """
        pass

    def __getattribute__(self, *args, **kwargs): # real signature unknown
        """ Return getattr(self, name). """
        pass

    def __init__(self, attr, *more): # real signature unknown; restored from __doc__
        pass

    @staticmethod # known case of __new__
    def __new__(*args, **kwargs): # real signature unknown
        """ Create and return a new object.  See help(type) for accurate signature. """
        pass

    def __reduce__(self, *args, **kwargs): # real signature unknown
        """ Return state information for pickling """
        pass

    def __repr__(self, *args, **kwargs): # real signature unknown
        """ Return repr(self). """
        pass

    __vectorcalloffset__ = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default



class auto(object):
    """ Instances are replaced with an appropriate value in Enum class suites. """
    def __init__(self, value='_auto_null'): # reliably restored by inspect
        # no doc
        pass

    def __repr__(self): # reliably restored by inspect
        # no doc
        pass

    __weakref__ = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """list of weak references to the object (if defined)"""


    __dict__ = None # (!) real value is "mappingproxy({'__module__': 'enum', '__doc__': '\\n    Instances are replaced with an appropriate value in Enum class suites.\\n    ', '__init__': <function auto.__init__ at 0x00000271EF549300>, '__repr__': <function auto.__repr__ at 0x00000271EF5493A0>, '__dict__': <attribute '__dict__' of 'auto' objects>, '__weakref__': <attribute '__weakref__' of 'auto' objects>})"


class Deprecated(UserWarning):
    # no doc
    def __getstate__(self, *args, **kwargs): # real signature unknown
        pass

    def __init__(self, *args, **kwargs): # real signature unknown
        pass

    def __setstate__(self, *args, **kwargs): # real signature unknown
        pass

    __weakref__ = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default


    __dict__ = None # (!) real value is "mappingproxy({'__setstate__': <method '__setstate__' of 'Deprecated' objects>, '__getstate__': <method '__getstate__' of 'Deprecated' objects>, '__dict__': <member '__dict__' of 'Deprecated' objects>, '__weakref__': <member '__weakref__' of 'Deprecated' objects>, '__doc__': None, '__module__': 'black.mode', '__mypyc_attrs__': ('__dict__',)})"
    __mypyc_attrs__ = (
        '__dict__',
    )


class Enum(object):
    """
    Create a collection of name/value pairs.
    
        Example enumeration:
    
        >>> class Color(Enum):
        ...     RED = 1
        ...     BLUE = 2
        ...     GREEN = 3
    
        Access them by:
    
        - attribute access::
    
        >>> Color.RED
        <Color.RED: 1>
    
        - value lookup:
    
        >>> Color(1)
        <Color.RED: 1>
    
        - name lookup:
    
        >>> Color['RED']
        <Color.RED: 1>
    
        Enumerations can be iterated over, and know how many members they have:
    
        >>> len(Color)
        3
    
        >>> list(Color)
        [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]
    
        Methods can be added to enumerations, and members can have their own
        attributes -- see the documentation for details.
    """
    def _generate_next_value_(name, start, count, last_values): # reliably restored by inspect
        """
        Generate the next value when not given.
        
                name: the name of the member
                start: the initial start value or None
                count: the number of existing members
                last_values: the list of values assigned
        """
        pass

    @classmethod
    def _missing_(cls, *args, **kwargs): # real signature unknown
        pass

    def _new_member_(cls, value): # reliably restored by inspect
        # no doc
        pass

    def __dir__(self): # reliably restored by inspect
        """ Returns all members and all public methods """
        pass

    def __format__(self, format_spec): # reliably restored by inspect
        # no doc
        pass

    def __hash__(self): # reliably restored by inspect
        # no doc
        pass

    def __init__(self, *args, **kwds): # reliably restored by inspect
        # no doc
        pass

    @staticmethod # known case of __new__
    def __new__(cls, value): # reliably restored by inspect
        # no doc
        pass

    def __reduce_ex__(self, proto): # reliably restored by inspect
        # no doc
        pass

    def __repr__(self): # reliably restored by inspect
        # no doc
        pass

    def __str__(self): # reliably restored by inspect
        # no doc
        pass

    __weakref__ = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """list of weak references to the object (if defined)"""


    name = None # (!) real value is '<enum.property object at 0x00000271EF762F90>'
    value = None # (!) real value is '<enum.property object at 0x00000271EF7630D0>'
    _member_map_ = {}
    _member_names_ = []
    _member_type_ = object
    _unhashable_values_ = []
    _use_args_ = False
    _value2member_map_ = {}
    _value_repr_ = None
    __dict__ = None # (!) real value is 'mappingproxy({\'__module__\': \'enum\', \'__doc__\': "\\n    Create a collection of name/value pairs.\\n\\n    Example enumeration:\\n\\n    >>> class Color(Enum):\\n    ...     RED = 1\\n    ...     BLUE = 2\\n    ...     GREEN = 3\\n\\n    Access them by:\\n\\n    - attribute access::\\n\\n    >>> Color.RED\\n    <Color.RED: 1>\\n\\n    - value lookup:\\n\\n    >>> Color(1)\\n    <Color.RED: 1>\\n\\n    - name lookup:\\n\\n    >>> Color[\'RED\']\\n    <Color.RED: 1>\\n\\n    Enumerations can be iterated over, and know how many members they have:\\n\\n    >>> len(Color)\\n    3\\n\\n    >>> list(Color)\\n    [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]\\n\\n    Methods can be added to enumerations, and members can have their own\\n    attributes -- see the documentation for details.\\n    ", \'__new__\': <staticmethod(<function Enum.__new__ at 0x00000271EF54A840>)>, \'__init__\': <function Enum.__init__ at 0x00000271EF54A8E0>, \'_generate_next_value_\': <function Enum._generate_next_value_ at 0x00000271EF54A980>, \'_missing_\': <classmethod(<function Enum._missing_ at 0x00000271EF54AA20>)>, \'__repr__\': <function Enum.__repr__ at 0x00000271EF54AAC0>, \'__str__\': <function Enum.__str__ at 0x00000271EF54AB60>, \'__dir__\': <function Enum.__dir__ at 0x00000271EF54AC00>, \'__format__\': <function Enum.__format__ at 0x00000271EF54ACA0>, \'__hash__\': <function Enum.__hash__ at 0x00000271EF54AD40>, \'__reduce_ex__\': <function Enum.__reduce_ex__ at 0x00000271EF54ADE0>, \'name\': <enum.property object at 0x00000271EF762F90>, \'value\': <enum.property object at 0x00000271EF7630D0>, \'_new_member_\': <function Enum.__new__ at 0x00000271EF54A840>, \'_use_args_\': False, \'_member_names_\': [], \'_member_map_\': {}, \'_value2member_map_\': {}, \'_unhashable_values_\': [], \'_member_type_\': <class \'object\'>, \'_value_repr_\': None, \'__dict__\': <attribute \'__dict__\' of \'Enum\' objects>, \'__weakref__\': <attribute \'__weakref__\' of \'Enum\' objects>})'


class Feature(__enum.Enum):
    """ mypyc filler docstring """
    def _generate_next_value_(name, start, count, last_values): # reliably restored by inspect
        """
        Generate the next value when not given.
        
                name: the name of the member
                start: the initial start value or None
                count: the number of existing members
                last_values: the list of values assigned
        """
        pass

    def _new_member_(self, *args, **kwargs): # real signature unknown
        """ Create and return a new object.  See help(type) for accurate signature. """
        pass

    def __init__(self, *args, **kwds): # reliably restored by inspect
        # no doc
        pass

    @staticmethod # known case of __new__
    def __new__(cls, value): # reliably restored by inspect
        # no doc
        pass

    ANN_ASSIGN_EXTENDED_RHS = None # (!) real value is '<Feature.ANN_ASSIGN_EXTENDED_RHS: 13>'
    ASSIGNMENT_EXPRESSIONS = None # (!) real value is '<Feature.ASSIGNMENT_EXPRESSIONS: 8>'
    ASYNC_IDENTIFIERS = None # (!) real value is '<Feature.ASYNC_IDENTIFIERS: 6>'
    ASYNC_KEYWORDS = None # (!) real value is '<Feature.ASYNC_KEYWORDS: 7>'
    DEBUG_F_STRINGS = None # (!) real value is '<Feature.DEBUG_F_STRINGS: 16>'
    EXCEPT_STAR = None # (!) real value is '<Feature.EXCEPT_STAR: 14>'
    FORCE_OPTIONAL_PARENTHESES = None # (!) real value is '<Feature.FORCE_OPTIONAL_PARENTHESES: 50>'
    FSTRING_PARSING = None # (!) real value is '<Feature.FSTRING_PARSING: 19>'
    FUTURE_ANNOTATIONS = None # (!) real value is '<Feature.FUTURE_ANNOTATIONS: 51>'
    F_STRINGS = None # (!) real value is '<Feature.F_STRINGS: 2>'
    NUMERIC_UNDERSCORES = None # (!) real value is '<Feature.NUMERIC_UNDERSCORES: 3>'
    PARENTHESIZED_CONTEXT_MANAGERS = None # (!) real value is '<Feature.PARENTHESIZED_CONTEXT_MANAGERS: 17>'
    PATTERN_MATCHING = None # (!) real value is '<Feature.PATTERN_MATCHING: 11>'
    POS_ONLY_ARGUMENTS = None # (!) real value is '<Feature.POS_ONLY_ARGUMENTS: 9>'
    RELAXED_DECORATORS = None # (!) real value is '<Feature.RELAXED_DECORATORS: 10>'
    TRAILING_COMMA_IN_CALL = None # (!) real value is '<Feature.TRAILING_COMMA_IN_CALL: 4>'
    TRAILING_COMMA_IN_DEF = None # (!) real value is '<Feature.TRAILING_COMMA_IN_DEF: 5>'
    TYPE_PARAMS = None # (!) real value is '<Feature.TYPE_PARAMS: 18>'
    TYPE_PARAM_DEFAULTS = None # (!) real value is '<Feature.TYPE_PARAM_DEFAULTS: 20>'
    UNPACKING_ON_FLOW = None # (!) real value is '<Feature.UNPACKING_ON_FLOW: 12>'
    VARIADIC_GENERICS = None # (!) real value is '<Feature.VARIADIC_GENERICS: 15>'
    _member_map_ = {
        'ANN_ASSIGN_EXTENDED_RHS': None, # (!) real value is '<Feature.ANN_ASSIGN_EXTENDED_RHS: 13>'
        'ASSIGNMENT_EXPRESSIONS': None, # (!) real value is '<Feature.ASSIGNMENT_EXPRESSIONS: 8>'
        'ASYNC_IDENTIFIERS': None, # (!) real value is '<Feature.ASYNC_IDENTIFIERS: 6>'
        'ASYNC_KEYWORDS': None, # (!) real value is '<Feature.ASYNC_KEYWORDS: 7>'
        'DEBUG_F_STRINGS': None, # (!) real value is '<Feature.DEBUG_F_STRINGS: 16>'
        'EXCEPT_STAR': None, # (!) real value is '<Feature.EXCEPT_STAR: 14>'
        'FORCE_OPTIONAL_PARENTHESES': None, # (!) real value is '<Feature.FORCE_OPTIONAL_PARENTHESES: 50>'
        'FSTRING_PARSING': None, # (!) real value is '<Feature.FSTRING_PARSING: 19>'
        'FUTURE_ANNOTATIONS': None, # (!) real value is '<Feature.FUTURE_ANNOTATIONS: 51>'
        'F_STRINGS': None, # (!) real value is '<Feature.F_STRINGS: 2>'
        'NUMERIC_UNDERSCORES': None, # (!) real value is '<Feature.NUMERIC_UNDERSCORES: 3>'
        'PARENTHESIZED_CONTEXT_MANAGERS': None, # (!) real value is '<Feature.PARENTHESIZED_CONTEXT_MANAGERS: 17>'
        'PATTERN_MATCHING': None, # (!) real value is '<Feature.PATTERN_MATCHING: 11>'
        'POS_ONLY_ARGUMENTS': None, # (!) real value is '<Feature.POS_ONLY_ARGUMENTS: 9>'
        'RELAXED_DECORATORS': None, # (!) real value is '<Feature.RELAXED_DECORATORS: 10>'
        'TRAILING_COMMA_IN_CALL': None, # (!) real value is '<Feature.TRAILING_COMMA_IN_CALL: 4>'
        'TRAILING_COMMA_IN_DEF': None, # (!) real value is '<Feature.TRAILING_COMMA_IN_DEF: 5>'
        'TYPE_PARAMS': None, # (!) real value is '<Feature.TYPE_PARAMS: 18>'
        'TYPE_PARAM_DEFAULTS': None, # (!) real value is '<Feature.TYPE_PARAM_DEFAULTS: 20>'
        'UNPACKING_ON_FLOW': None, # (!) real value is '<Feature.UNPACKING_ON_FLOW: 12>'
        'VARIADIC_GENERICS': None, # (!) real value is '<Feature.VARIADIC_GENERICS: 15>'
    }
    _member_names_ = [
        'F_STRINGS',
        'NUMERIC_UNDERSCORES',
        'TRAILING_COMMA_IN_CALL',
        'TRAILING_COMMA_IN_DEF',
        'ASYNC_IDENTIFIERS',
        'ASYNC_KEYWORDS',
        'ASSIGNMENT_EXPRESSIONS',
        'POS_ONLY_ARGUMENTS',
        'RELAXED_DECORATORS',
        'PATTERN_MATCHING',
        'UNPACKING_ON_FLOW',
        'ANN_ASSIGN_EXTENDED_RHS',
        'EXCEPT_STAR',
        'VARIADIC_GENERICS',
        'DEBUG_F_STRINGS',
        'PARENTHESIZED_CONTEXT_MANAGERS',
        'TYPE_PARAMS',
        'FSTRING_PARSING',
        'TYPE_PARAM_DEFAULTS',
        'FORCE_OPTIONAL_PARENTHESES',
        'FUTURE_ANNOTATIONS',
    ]
    _member_type_ = object
    _unhashable_values_ = []
    _use_args_ = False
    _value2member_map_ = {
        2: None, # (!) real value is '<Feature.F_STRINGS: 2>'
        3: None, # (!) real value is '<Feature.NUMERIC_UNDERSCORES: 3>'
        4: None, # (!) real value is '<Feature.TRAILING_COMMA_IN_CALL: 4>'
        5: None, # (!) real value is '<Feature.TRAILING_COMMA_IN_DEF: 5>'
        6: None, # (!) real value is '<Feature.ASYNC_IDENTIFIERS: 6>'
        7: None, # (!) real value is '<Feature.ASYNC_KEYWORDS: 7>'
        8: None, # (!) real value is '<Feature.ASSIGNMENT_EXPRESSIONS: 8>'
        9: None, # (!) real value is '<Feature.POS_ONLY_ARGUMENTS: 9>'
        10: None, # (!) real value is '<Feature.RELAXED_DECORATORS: 10>'
        11: None, # (!) real value is '<Feature.PATTERN_MATCHING: 11>'
        12: None, # (!) real value is '<Feature.UNPACKING_ON_FLOW: 12>'
        13: None, # (!) real value is '<Feature.ANN_ASSIGN_EXTENDED_RHS: 13>'
        14: None, # (!) real value is '<Feature.EXCEPT_STAR: 14>'
        15: None, # (!) real value is '<Feature.VARIADIC_GENERICS: 15>'
        16: None, # (!) real value is '<Feature.DEBUG_F_STRINGS: 16>'
        17: None, # (!) real value is '<Feature.PARENTHESIZED_CONTEXT_MANAGERS: 17>'
        18: None, # (!) real value is '<Feature.TYPE_PARAMS: 18>'
        19: None, # (!) real value is '<Feature.FSTRING_PARSING: 19>'
        20: None, # (!) real value is '<Feature.TYPE_PARAM_DEFAULTS: 20>'
        50: None, # (!) real value is '<Feature.FORCE_OPTIONAL_PARENTHESES: 50>'
        51: None, # (!) real value is '<Feature.FUTURE_ANNOTATIONS: 51>'
    }
    _value_repr_ = None
    __annotations__ = {
        'ANN_ASSIGN_EXTENDED_RHS': int,
        'ASSIGNMENT_EXPRESSIONS': '<value is a self-reference, replaced by this string>',
        'ASYNC_IDENTIFIERS': '<value is a self-reference, replaced by this string>',
        'ASYNC_KEYWORDS': '<value is a self-reference, replaced by this string>',
        'DEBUG_F_STRINGS': '<value is a self-reference, replaced by this string>',
        'EXCEPT_STAR': '<value is a self-reference, replaced by this string>',
        'FORCE_OPTIONAL_PARENTHESES': '<value is a self-reference, replaced by this string>',
        'FSTRING_PARSING': '<value is a self-reference, replaced by this string>',
        'FUTURE_ANNOTATIONS': '<value is a self-reference, replaced by this string>',
        'F_STRINGS': '<value is a self-reference, replaced by this string>',
        'NUMERIC_UNDERSCORES': '<value is a self-reference, replaced by this string>',
        'PARENTHESIZED_CONTEXT_MANAGERS': '<value is a self-reference, replaced by this string>',
        'PATTERN_MATCHING': '<value is a self-reference, replaced by this string>',
        'POS_ONLY_ARGUMENTS': '<value is a self-reference, replaced by this string>',
        'RELAXED_DECORATORS': '<value is a self-reference, replaced by this string>',
        'TRAILING_COMMA_IN_CALL': '<value is a self-reference, replaced by this string>',
        'TRAILING_COMMA_IN_DEF': '<value is a self-reference, replaced by this string>',
        'TYPE_PARAMS': '<value is a self-reference, replaced by this string>',
        'TYPE_PARAM_DEFAULTS': '<value is a self-reference, replaced by this string>',
        'UNPACKING_ON_FLOW': '<value is a self-reference, replaced by this string>',
        'VARIADIC_GENERICS': '<value is a self-reference, replaced by this string>',
    }


class Mode(object):
    # no doc
    def get_cache_key(self, *args, **kwargs): # real signature unknown
        pass

    def __contains__(self, *args, **kwargs): # real signature unknown
        """ Return key in self. """
        pass

    def __eq__(self, other): # reliably restored by inspect
        # no doc
        pass

    def __getstate__(self, *args, **kwargs): # real signature unknown
        pass

    def __init__(self, target_versions='<factory>', line_length=88, string_normalization=True, is_pyi=False, is_ipynb=False, skip_source_first_line=False, magic_trailing_comma=True, python_cell_magics='<factory>', preview=False, unstable=False, enabled_features='<factory>'): # reliably restored by inspect
        # no doc
        pass

    @staticmethod # known case of __new__
    def __new__(*args, **kwargs): # real signature unknown
        """ Create and return a new object.  See help(type) for accurate signature. """
        pass

    def __repr__(self): # reliably restored by inspect
        # no doc
        pass

    def __setstate__(self, *args, **kwargs): # real signature unknown
        pass

    enabled_features = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    is_ipynb = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    is_pyi = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    line_length = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    magic_trailing_comma = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    preview = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    python_cell_magics = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    skip_source_first_line = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    string_normalization = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    target_versions = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default

    unstable = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default


    __annotations__ = {
        'enabled_features': set,
        'is_ipynb': bool,
        'is_pyi': '<value is a self-reference, replaced by this string>',
        'line_length': int,
        'magic_trailing_comma': '<value is a self-reference, replaced by this string>',
        'preview': '<value is a self-reference, replaced by this string>',
        'python_cell_magics': '<value is a self-reference, replaced by this string>',
        'skip_source_first_line': '<value is a self-reference, replaced by this string>',
        'string_normalization': '<value is a self-reference, replaced by this string>',
        'target_versions': '<value is a self-reference, replaced by this string>',
        'unstable': '<value is a self-reference, replaced by this string>',
    }
    __dataclass_fields__ = {
        'enabled_features': None, # (!) real value is "Field(name='enabled_features',type=<class 'set'>,default=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,default_factory=<class 'set'>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
        'is_ipynb': None, # (!) real value is "Field(name='is_ipynb',type=<class 'bool'>,default=False,default_factory=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
        'is_pyi': None, # (!) real value is "Field(name='is_pyi',type=<class 'bool'>,default=False,default_factory=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
        'line_length': None, # (!) real value is "Field(name='line_length',type=<class 'int'>,default=88,default_factory=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
        'magic_trailing_comma': None, # (!) real value is "Field(name='magic_trailing_comma',type=<class 'bool'>,default=True,default_factory=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
        'preview': None, # (!) real value is "Field(name='preview',type=<class 'bool'>,default=False,default_factory=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
        'python_cell_magics': None, # (!) real value is "Field(name='python_cell_magics',type=<class 'set'>,default=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,default_factory=<class 'set'>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
        'skip_source_first_line': None, # (!) real value is "Field(name='skip_source_first_line',type=<class 'bool'>,default=False,default_factory=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
        'string_normalization': None, # (!) real value is "Field(name='string_normalization',type=<class 'bool'>,default=True,default_factory=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
        'target_versions': None, # (!) real value is "Field(name='target_versions',type=<class 'set'>,default=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,default_factory=<class 'set'>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
        'unstable': None, # (!) real value is "Field(name='unstable',type=<class 'bool'>,default=False,default_factory=<dataclasses._MISSING_TYPE object at 0x00000271F18B47D0>,init=True,repr=True,hash=None,compare=True,metadata=mappingproxy({}),kw_only=False,_field_type=_FIELD)"
    }
    __dataclass_params__ = _DataclassParams(init=True,repr=True,eq=True,order=False,unsafe_hash=False,frozen=False)
    __hash__ = None
    __match_args__ = (
        'target_versions',
        'line_length',
        'string_normalization',
        'is_pyi',
        'is_ipynb',
        'skip_source_first_line',
        'magic_trailing_comma',
        'python_cell_magics',
        'preview',
        'unstable',
        'enabled_features',
    )
    __mypyc_attrs__ = (
        'target_versions',
        'line_length',
        'string_normalization',
        'is_pyi',
        'is_ipynb',
        'skip_source_first_line',
        'magic_trailing_comma',
        'python_cell_magics',
        'preview',
        'unstable',
        'enabled_features',
    )


class Preview(__enum.Enum):
    """ mypyc filler docstring """
    def _generate_next_value_(name, start, count, last_values): # reliably restored by inspect
        """
        Generate the next value when not given.
        
                name: the name of the member
                start: the initial start value or None
                count: the number of existing members
                last_values: the list of values assigned
        """
        pass

    def _new_member_(self, *args, **kwargs): # real signature unknown
        """ Create and return a new object.  See help(type) for accurate signature. """
        pass

    def __init__(self, *args, **kwds): # reliably restored by inspect
        # no doc
        pass

    @staticmethod # known case of __new__
    def __new__(cls, value): # reliably restored by inspect
        # no doc
        pass

    docstring_check_for_newline = None # (!) real value is '<Preview.docstring_check_for_newline: 10>'
    hex_codes_in_unicode_sequences = None # (!) real value is '<Preview.hex_codes_in_unicode_sequences: 1>'
    hug_parens_with_braces_and_square_brackets = None # (!) real value is '<Preview.hug_parens_with_braces_and_square_brackets: 3>'
    is_simple_lookup_for_doublestar_expression = None # (!) real value is '<Preview.is_simple_lookup_for_doublestar_expression: 9>'
    multiline_string_handling = None # (!) real value is '<Preview.multiline_string_handling: 7>'
    no_normalize_fmt_skip_whitespace = None # (!) real value is '<Preview.no_normalize_fmt_skip_whitespace: 5>'
    parens_for_long_if_clauses_in_case_block = None # (!) real value is '<Preview.parens_for_long_if_clauses_in_case_block: 12>'
    remove_redundant_guard_parens = None # (!) real value is '<Preview.remove_redundant_guard_parens: 11>'
    string_processing = None # (!) real value is '<Preview.string_processing: 2>'
    typed_params_trailing_comma = None # (!) real value is '<Preview.typed_params_trailing_comma: 8>'
    unify_docstring_detection = None # (!) real value is '<Preview.unify_docstring_detection: 4>'
    wrap_long_dict_values_in_parens = None # (!) real value is '<Preview.wrap_long_dict_values_in_parens: 6>'
    _member_map_ = {
        'docstring_check_for_newline': None, # (!) real value is '<Preview.docstring_check_for_newline: 10>'
        'hex_codes_in_unicode_sequences': None, # (!) real value is '<Preview.hex_codes_in_unicode_sequences: 1>'
        'hug_parens_with_braces_and_square_brackets': None, # (!) real value is '<Preview.hug_parens_with_braces_and_square_brackets: 3>'
        'is_simple_lookup_for_doublestar_expression': None, # (!) real value is '<Preview.is_simple_lookup_for_doublestar_expression: 9>'
        'multiline_string_handling': None, # (!) real value is '<Preview.multiline_string_handling: 7>'
        'no_normalize_fmt_skip_whitespace': None, # (!) real value is '<Preview.no_normalize_fmt_skip_whitespace: 5>'
        'parens_for_long_if_clauses_in_case_block': None, # (!) real value is '<Preview.parens_for_long_if_clauses_in_case_block: 12>'
        'remove_redundant_guard_parens': None, # (!) real value is '<Preview.remove_redundant_guard_parens: 11>'
        'string_processing': None, # (!) real value is '<Preview.string_processing: 2>'
        'typed_params_trailing_comma': None, # (!) real value is '<Preview.typed_params_trailing_comma: 8>'
        'unify_docstring_detection': None, # (!) real value is '<Preview.unify_docstring_detection: 4>'
        'wrap_long_dict_values_in_parens': None, # (!) real value is '<Preview.wrap_long_dict_values_in_parens: 6>'
    }
    _member_names_ = [
        'hex_codes_in_unicode_sequences',
        'string_processing',
        'hug_parens_with_braces_and_square_brackets',
        'unify_docstring_detection',
        'no_normalize_fmt_skip_whitespace',
        'wrap_long_dict_values_in_parens',
        'multiline_string_handling',
        'typed_params_trailing_comma',
        'is_simple_lookup_for_doublestar_expression',
        'docstring_check_for_newline',
        'remove_redundant_guard_parens',
        'parens_for_long_if_clauses_in_case_block',
    ]
    _member_type_ = object
    _unhashable_values_ = []
    _use_args_ = False
    _value2member_map_ = {
        1: None, # (!) real value is '<Preview.hex_codes_in_unicode_sequences: 1>'
        2: None, # (!) real value is '<Preview.string_processing: 2>'
        3: None, # (!) real value is '<Preview.hug_parens_with_braces_and_square_brackets: 3>'
        4: None, # (!) real value is '<Preview.unify_docstring_detection: 4>'
        5: None, # (!) real value is '<Preview.no_normalize_fmt_skip_whitespace: 5>'
        6: None, # (!) real value is '<Preview.wrap_long_dict_values_in_parens: 6>'
        7: None, # (!) real value is '<Preview.multiline_string_handling: 7>'
        8: None, # (!) real value is '<Preview.typed_params_trailing_comma: 8>'
        9: None, # (!) real value is '<Preview.is_simple_lookup_for_doublestar_expression: 9>'
        10: None, # (!) real value is '<Preview.docstring_check_for_newline: 10>'
        11: None, # (!) real value is '<Preview.remove_redundant_guard_parens: 11>'
        12: None, # (!) real value is '<Preview.parens_for_long_if_clauses_in_case_block: 12>'
    }
    _value_repr_ = None
    __annotations__ = {
        'docstring_check_for_newline': type,
        'hex_codes_in_unicode_sequences': '<value is a self-reference, replaced by this string>',
        'hug_parens_with_braces_and_square_brackets': '<value is a self-reference, replaced by this string>',
        'is_simple_lookup_for_doublestar_expression': '<value is a self-reference, replaced by this string>',
        'multiline_string_handling': '<value is a self-reference, replaced by this string>',
        'no_normalize_fmt_skip_whitespace': '<value is a self-reference, replaced by this string>',
        'parens_for_long_if_clauses_in_case_block': '<value is a self-reference, replaced by this string>',
        'remove_redundant_guard_parens': '<value is a self-reference, replaced by this string>',
        'string_processing': '<value is a self-reference, replaced by this string>',
        'typed_params_trailing_comma': '<value is a self-reference, replaced by this string>',
        'unify_docstring_detection': '<value is a self-reference, replaced by this string>',
        'wrap_long_dict_values_in_parens': '<value is a self-reference, replaced by this string>',
    }


class TargetVersion(__enum.Enum):
    """ mypyc filler docstring """
    def _generate_next_value_(name, start, count, last_values): # reliably restored by inspect
        """
        Generate the next value when not given.
        
                name: the name of the member
                start: the initial start value or None
                count: the number of existing members
                last_values: the list of values assigned
        """
        pass

    def _new_member_(self, *args, **kwargs): # real signature unknown
        """ Create and return a new object.  See help(type) for accurate signature. """
        pass

    def __init__(self, *args, **kwds): # reliably restored by inspect
        # no doc
        pass

    @staticmethod # known case of __new__
    def __new__(cls, value): # reliably restored by inspect
        # no doc
        pass

    PY310 = None # (!) real value is '<TargetVersion.PY310: 10>'
    PY311 = None # (!) real value is '<TargetVersion.PY311: 11>'
    PY312 = None # (!) real value is '<TargetVersion.PY312: 12>'
    PY313 = None # (!) real value is '<TargetVersion.PY313: 13>'
    PY33 = None # (!) real value is '<TargetVersion.PY33: 3>'
    PY34 = None # (!) real value is '<TargetVersion.PY34: 4>'
    PY35 = None # (!) real value is '<TargetVersion.PY35: 5>'
    PY36 = None # (!) real value is '<TargetVersion.PY36: 6>'
    PY37 = None # (!) real value is '<TargetVersion.PY37: 7>'
    PY38 = None # (!) real value is '<TargetVersion.PY38: 8>'
    PY39 = None # (!) real value is '<TargetVersion.PY39: 9>'
    _member_map_ = {
        'PY310': None, # (!) real value is '<TargetVersion.PY310: 10>'
        'PY311': None, # (!) real value is '<TargetVersion.PY311: 11>'
        'PY312': None, # (!) real value is '<TargetVersion.PY312: 12>'
        'PY313': None, # (!) real value is '<TargetVersion.PY313: 13>'
        'PY33': None, # (!) real value is '<TargetVersion.PY33: 3>'
        'PY34': None, # (!) real value is '<TargetVersion.PY34: 4>'
        'PY35': None, # (!) real value is '<TargetVersion.PY35: 5>'
        'PY36': None, # (!) real value is '<TargetVersion.PY36: 6>'
        'PY37': None, # (!) real value is '<TargetVersion.PY37: 7>'
        'PY38': None, # (!) real value is '<TargetVersion.PY38: 8>'
        'PY39': None, # (!) real value is '<TargetVersion.PY39: 9>'
    }
    _member_names_ = [
        'PY33',
        'PY34',
        'PY35',
        'PY36',
        'PY37',
        'PY38',
        'PY39',
        'PY310',
        'PY311',
        'PY312',
        'PY313',
    ]
    _member_type_ = object
    _unhashable_values_ = []
    _use_args_ = False
    _value2member_map_ = {
        3: None, # (!) real value is '<TargetVersion.PY33: 3>'
        4: None, # (!) real value is '<TargetVersion.PY34: 4>'
        5: None, # (!) real value is '<TargetVersion.PY35: 5>'
        6: None, # (!) real value is '<TargetVersion.PY36: 6>'
        7: None, # (!) real value is '<TargetVersion.PY37: 7>'
        8: None, # (!) real value is '<TargetVersion.PY38: 8>'
        9: None, # (!) real value is '<TargetVersion.PY39: 9>'
        10: None, # (!) real value is '<TargetVersion.PY310: 10>'
        11: None, # (!) real value is '<TargetVersion.PY311: 11>'
        12: None, # (!) real value is '<TargetVersion.PY312: 12>'
        13: None, # (!) real value is '<TargetVersion.PY313: 13>'
    }
    _value_repr_ = None
    __annotations__ = {
        'PY310': int,
        'PY311': '<value is a self-reference, replaced by this string>',
        'PY312': '<value is a self-reference, replaced by this string>',
        'PY313': '<value is a self-reference, replaced by this string>',
        'PY33': '<value is a self-reference, replaced by this string>',
        'PY34': '<value is a self-reference, replaced by this string>',
        'PY35': '<value is a self-reference, replaced by this string>',
        'PY36': '<value is a self-reference, replaced by this string>',
        'PY37': '<value is a self-reference, replaced by this string>',
        'PY38': '<value is a self-reference, replaced by this string>',
        'PY39': '<value is a self-reference, replaced by this string>',
    }


# variables with complex values

FUTURE_FLAG_TO_FEATURE = {
    'annotations': None, # (!) real value is '<Feature.FUTURE_ANNOTATIONS: 51>'
}

UNSTABLE_FEATURES = None # (!) real value is '{<Preview.hug_parens_with_braces_and_square_brackets: 3>, <Preview.multiline_string_handling: 7>, <Preview.string_processing: 2>, <Preview.wrap_long_dict_values_in_parens: 6>}'

VERSION_TO_FEATURES = {
    None:  # (!) real value is '<TargetVersion.PY33: 3>'
        None # (!) real value is '{<Feature.ASYNC_IDENTIFIERS: 6>}'
    ,
    None:  # (!) real value is '<TargetVersion.PY34: 4>'
        '<value is a self-reference, replaced by this string>'
    ,
    None:  # (!) real value is '<TargetVersion.PY35: 5>'
        None # (!) real value is '{<Feature.ASYNC_IDENTIFIERS: 6>, <Feature.TRAILING_COMMA_IN_CALL: 4>}'
    ,
    None:  # (!) real value is '<TargetVersion.PY36: 6>'
        None # (!) real value is '{<Feature.NUMERIC_UNDERSCORES: 3>, <Feature.TRAILING_COMMA_IN_CALL: 4>, <Feature.TRAILING_COMMA_IN_DEF: 5>, <Feature.F_STRINGS: 2>, <Feature.ASYNC_IDENTIFIERS: 6>}'
    ,
    None:  # (!) real value is '<TargetVersion.PY37: 7>'
        None # (!) real value is '{<Feature.ASYNC_KEYWORDS: 7>, <Feature.NUMERIC_UNDERSCORES: 3>, <Feature.TRAILING_COMMA_IN_CALL: 4>, <Feature.TRAILING_COMMA_IN_DEF: 5>, <Feature.F_STRINGS: 2>, <Feature.FUTURE_ANNOTATIONS: 51>}'
    ,
    None:  # (!) real value is '<TargetVersion.PY38: 8>'
        None # (!) real value is '{<Feature.ASYNC_KEYWORDS: 7>, <Feature.NUMERIC_UNDERSCORES: 3>, <Feature.DEBUG_F_STRINGS: 16>, <Feature.UNPACKING_ON_FLOW: 12>, <Feature.ANN_ASSIGN_EXTENDED_RHS: 13>, <Feature.TRAILING_COMMA_IN_CALL: 4>, <Feature.TRAILING_COMMA_IN_DEF: 5>, <Feature.POS_ONLY_ARGUMENTS: 9>, <Feature.F_STRINGS: 2>, <Feature.ASSIGNMENT_EXPRESSIONS: 8>, <Feature.FUTURE_ANNOTATIONS: 51>}'
    ,
    None:  # (!) real value is '<TargetVersion.PY39: 9>'
        None # (!) real value is '{<Feature.ASYNC_KEYWORDS: 7>, <Feature.NUMERIC_UNDERSCORES: 3>, <Feature.DEBUG_F_STRINGS: 16>, <Feature.UNPACKING_ON_FLOW: 12>, <Feature.ANN_ASSIGN_EXTENDED_RHS: 13>, <Feature.TRAILING_COMMA_IN_CALL: 4>, <Feature.PARENTHESIZED_CONTEXT_MANAGERS: 17>, <Feature.TRAILING_COMMA_IN_DEF: 5>, <Feature.POS_ONLY_ARGUMENTS: 9>, <Feature.F_STRINGS: 2>, <Feature.RELAXED_DECORATORS: 10>, <Feature.ASSIGNMENT_EXPRESSIONS: 8>, <Feature.FUTURE_ANNOTATIONS: 51>}'
    ,
    None:  # (!) real value is '<TargetVersion.PY310: 10>'
        None # (!) real value is '{<Feature.ASYNC_KEYWORDS: 7>, <Feature.NUMERIC_UNDERSCORES: 3>, <Feature.DEBUG_F_STRINGS: 16>, <Feature.UNPACKING_ON_FLOW: 12>, <Feature.ANN_ASSIGN_EXTENDED_RHS: 13>, <Feature.TRAILING_COMMA_IN_CALL: 4>, <Feature.PARENTHESIZED_CONTEXT_MANAGERS: 17>, <Feature.TRAILING_COMMA_IN_DEF: 5>, <Feature.POS_ONLY_ARGUMENTS: 9>, <Feature.F_STRINGS: 2>, <Feature.RELAXED_DECORATORS: 10>, <Feature.PATTERN_MATCHING: 11>, <Feature.ASSIGNMENT_EXPRESSIONS: 8>, <Feature.FUTURE_ANNOTATIONS: 51>}'
    ,
    None:  # (!) real value is '<TargetVersion.PY311: 11>'
        None # (!) real value is '{<Feature.ASYNC_KEYWORDS: 7>, <Feature.NUMERIC_UNDERSCORES: 3>, <Feature.DEBUG_F_STRINGS: 16>, <Feature.UNPACKING_ON_FLOW: 12>, <Feature.ANN_ASSIGN_EXTENDED_RHS: 13>, <Feature.EXCEPT_STAR: 14>, <Feature.TRAILING_COMMA_IN_CALL: 4>, <Feature.PARENTHESIZED_CONTEXT_MANAGERS: 17>, <Feature.TRAILING_COMMA_IN_DEF: 5>, <Feature.POS_ONLY_ARGUMENTS: 9>, <Feature.F_STRINGS: 2>, <Feature.RELAXED_DECORATORS: 10>, <Feature.VARIADIC_GENERICS: 15>, <Feature.PATTERN_MATCHING: 11>, <Feature.ASSIGNMENT_EXPRESSIONS: 8>, <Feature.FUTURE_ANNOTATIONS: 51>}'
    ,
    None:  # (!) real value is '<TargetVersion.PY312: 12>'
        None # (!) real value is '{<Feature.ASYNC_KEYWORDS: 7>, <Feature.NUMERIC_UNDERSCORES: 3>, <Feature.DEBUG_F_STRINGS: 16>, <Feature.UNPACKING_ON_FLOW: 12>, <Feature.ANN_ASSIGN_EXTENDED_RHS: 13>, <Feature.EXCEPT_STAR: 14>, <Feature.TYPE_PARAMS: 18>, <Feature.TRAILING_COMMA_IN_CALL: 4>, <Feature.PARENTHESIZED_CONTEXT_MANAGERS: 17>, <Feature.TRAILING_COMMA_IN_DEF: 5>, <Feature.FSTRING_PARSING: 19>, <Feature.POS_ONLY_ARGUMENTS: 9>, <Feature.F_STRINGS: 2>, <Feature.RELAXED_DECORATORS: 10>, <Feature.VARIADIC_GENERICS: 15>, <Feature.PATTERN_MATCHING: 11>, <Feature.ASSIGNMENT_EXPRESSIONS: 8>, <Feature.FUTURE_ANNOTATIONS: 51>}'
    ,
    None:  # (!) real value is '<TargetVersion.PY313: 13>'
        None # (!) real value is '{<Feature.ASYNC_KEYWORDS: 7>, <Feature.UNPACKING_ON_FLOW: 12>, <Feature.TYPE_PARAM_DEFAULTS: 20>, <Feature.TRAILING_COMMA_IN_DEF: 5>, <Feature.POS_ONLY_ARGUMENTS: 9>, <Feature.DEBUG_F_STRINGS: 16>, <Feature.TRAILING_COMMA_IN_CALL: 4>, <Feature.F_STRINGS: 2>, <Feature.PATTERN_MATCHING: 11>, <Feature.ANN_ASSIGN_EXTENDED_RHS: 13>, <Feature.ASSIGNMENT_EXPRESSIONS: 8>, <Feature.FUTURE_ANNOTATIONS: 51>, <Feature.NUMERIC_UNDERSCORES: 3>, <Feature.TYPE_PARAMS: 18>, <Feature.PARENTHESIZED_CONTEXT_MANAGERS: 17>, <Feature.RELAXED_DECORATORS: 10>, <Feature.VARIADIC_GENERICS: 15>, <Feature.EXCEPT_STAR: 14>, <Feature.FSTRING_PARSING: 19>}'
    ,
}

__loader__ = None # (!) real value is '<_frozen_importlib_external.ExtensionFileLoader object at 0x00000271F1A5DB90>'

__spec__ = None # (!) real value is "ModuleSpec(name='black.mode', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x00000271F1A5DB90>, origin='C:\\\\Users\\\\kosta\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python311\\\\Lib\\\\site-packages\\\\black\\\\mode.cp311-win_amd64.pyd')"

